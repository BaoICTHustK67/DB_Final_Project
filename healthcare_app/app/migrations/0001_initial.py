# Generated by Django 4.2.7 on 2024-01-07 17:24

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('DOCTOR', 'Doctor'), ('PATIENT', 'Patient')], default='PATIENT', max_length=50)),
                ('name', models.CharField(default='Edit your name', max_length=200, null=True)),
                ('username', models.CharField(max_length=20, null=True)),
                ('first_name', models.CharField(max_length=20, null=True)),
                ('last_name', models.CharField(max_length=20, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appointment_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('appointment_date', models.DateField(max_length=20, null=True)),
                ('start_time', models.TimeField(null=True)),
                ('status', models.IntegerField(null=True)),
                ('created', models.DateField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('membership_id', models.CharField(default='TYPE003', primary_key=True, serialize=False)),
                ('discount_percent', models.IntegerField(null=True)),
                ('type', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_id', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('desscription', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('service_name', models.CharField(max_length=50, null=True)),
                ('service_type', models.CharField(max_length=30, null=True)),
                ('status', models.IntegerField(default=2)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('appointment_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='app.appointment')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('payment_time', models.DateTimeField(null=True)),
                ('status', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('appointment_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='app.appointment')),
                ('date_prescribled', models.DateTimeField(null=True)),
                ('dosage', models.CharField(max_length=50, null=True)),
                ('payment_time', models.DateTimeField(null=True)),
                ('status', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_id', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('room_name', models.CharField(max_length=50, null=True)),
                ('room_type', models.CharField(max_length=10, null=True)),
                ('status', models.IntegerField(default=1)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.service')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.CharField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.category')),
                ('participants', models.ManyToManyField(blank=True, related_name='participants', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('patient_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('firstname', models.CharField(max_length=50, null=True)),
                ('lastname', models.CharField(max_length=50, null=True)),
                ('gender', models.IntegerField(null=True)),
                ('dob', models.DateField(default='2004-01-01')),
                ('contact_number', models.CharField(max_length=20, null=True)),
                ('address', models.CharField(max_length=50, null=True)),
                ('cccd', models.CharField(max_length=50, null=True)),
                ('bmi', models.FloatField(blank=True, max_length=20, null=True)),
                ('weight', models.FloatField(blank=True, max_length=20, null=True)),
                ('height', models.FloatField(blank=True, max_length=20, null=True)),
                ('blood_pressure', models.FloatField(blank=True, max_length=20, null=True)),
                ('membership', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.membership')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('doctor_id', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('firstname', models.CharField(max_length=50, null=True)),
                ('lastname', models.CharField(max_length=50, null=True)),
                ('address', models.CharField(max_length=50, null=True)),
                ('cccd', models.CharField(max_length=50, null=True)),
                ('contact_number', models.CharField(max_length=20, null=True)),
                ('dob', models.DateField(null=True)),
                ('gender', models.IntegerField(null=True)),
                ('status', models.IntegerField(default=1, null=True)),
                ('service', models.ManyToManyField(to='app.service')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.CharField(primary_key=True, serialize=False)),
                ('body', models.TextField()),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.doctor'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.patient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='room_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.room'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.service'),
        ),
    ]
